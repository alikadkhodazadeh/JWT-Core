// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Infrastructure.Persistence;

#nullable disable

namespace Portal.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("RefreshToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fd5c0b5-24f4-4e8d-bb57-cda8fbe4c066"),
                            Email = "jackma@example.com",
                            FirstName = "Jack",
                            LastName = "Ma",
                            PasswordHash = "KhjEt0fdxXriZ/gXCUc7rE0/zvYj6FAUoOzZi7Ga5pk=",
                            Role = (byte)0
                        },
                        new
                        {
                            Id = new Guid("5415bac0-548f-4d83-a958-61d60f537ea5"),
                            Email = "bobrezvani@example.com",
                            FirstName = "Bob",
                            LastName = "Rezvani",
                            PasswordHash = "jQWcNkC5cYDdLuRT4g00qwyw8uzL6H0BkVqOV4ogKxE=",
                            Role = (byte)1
                        },
                        new
                        {
                            Id = new Guid("3767b893-70ce-4877-a916-e9d0b12e13a9"),
                            Email = "johnsmith@example.com",
                            FirstName = "John",
                            LastName = "Smith",
                            PasswordHash = "tLWXxxSo9JED2k2rAmavDuCuT4V1JQqEhVw9dpQc1CI=",
                            Role = (byte)1
                        });
                });

            modelBuilder.Entity("RefreshToken", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
